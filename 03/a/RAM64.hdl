// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16 bit-wide. Out hold the value
 * stored at the memory location specified by address. If load=1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out after the next time step.)
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    // Put your code here:

    // Put your code here:
    DMux8Way(in=load,sel[0]=address[3],sel[1]=address[4],sel[2]=address[5],a=a,b=b,c=c,d=d,e=e,f=f,g=g,h=h);
    RAM8(in=in,load=a,address[0]=address[0],address[1]=address[1],address[2]=address[2],out=out0);
    RAM8(in=in,load=b,address[0]=address[0],address[1]=address[1],address[2]=address[2],out=out1);
    RAM8(in=in,load=c,address[0]=address[0],address[1]=address[1],address[2]=address[2],out=out2);
    RAM8(in=in,load=d,address[0]=address[0],address[1]=address[1],address[2]=address[2],out=out3);
    RAM8(in=in,load=e,address[0]=address[0],address[1]=address[1],address[2]=address[2],out=out4);
    RAM8(in=in,load=f,address[0]=address[0],address[1]=address[1],address[2]=address[2],out=out5);
    RAM8(in=in,load=g,address[0]=address[0],address[1]=address[1],address[2]=address[2],out=out6);
    RAM8(in=in,load=h,address[0]=address[0],address[1]=address[1],address[2]=address[2],out=out7);
    Mux8Way16(a=out0,b=out1,c=out2,d=out3,e=out4,f=out5,g=out6,h=out7,sel[0]=address[3],sel[1]=address[4],sel[2]=address[5],out=out);
}
